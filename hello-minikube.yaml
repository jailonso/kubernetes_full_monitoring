apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    # (...)
  creationTimestamp: "2020-03-25T21:09:14Z"
  generation: 7
  labels:
    app: hello-minikube
  name: hello-minikube
  namespace: default
  resourceVersion: "49403"
  selfLink: /apis/apps/v1/namespaces/default/deployments/hello-minikube
  uid: 8bb51e53-1232-457b-ae3d-e1f7c376fb49
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: hello-minikube
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        ad.datadoghq.com/echoserver.check_names: '["nginx"]'
        ad.datadoghq.com/echoserver.init_configs: '[{}]'
        ad.datadoghq.com/echoserver.instances: '[{"nginx_status_url": "http://%%host%%:8080/nginx_status/"}]'
        ad.datadoghq.com/echoserver.logs: '[{"source": "nginx", "service": "nginx"}]'
      creationTimestamp: null
      labels:
        app: hello-minikube
    spec:
      containers:
      - image: jailonso/echoserver:v1
        imagePullPolicy: Always
        name: echoserver
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30